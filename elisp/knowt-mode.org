* Knowt-Mode
#+BEGIN_SRC emacs-lisp
      (require 'org-build)

      (defvar knowt-file-name (expand-file-name "~/.knowt/knowt.org"))
      (defvar knowt-mode-file (expand-file-name "~/.knowt/emacs.d/knowt-mode.el"))

      (defun set-agenda-keywords ()
        (setq org-todo-keywords
            '((sequence "TODO" "DOING" "DONE" "WAITING" "|" "CLOSED")))

        (setq org-todo-keyword-faces
              '(("TODO" . "red")
                ("DOING" . (:foreground "cyan" :weight "bold"))
                ("DONE" . (:foreground "green" :strike-through t))
                ("WAITING" . (:foreground "Brown" :weight "bold" :slant oblique))
                ("CLOSED" . (:foreground "grey" :strike-through t :slant italic)))))

      (defun reload ()
        (unload-feature 'knowt-mode)
        (build-mode)
        (load-file (knowt-mode-el-file))
        (knowt-mode 1))

      (defun reset ()
        (delete-other-windows)
        (switch-to-buffer "knowt.org")
        (widen)
        (org-mode-restart)
        (org-global-cycle 1)
        (beginning-of-buffer)
        (search-forward "* Knowt Help")
        (org-cycle)
        (beginning-of-buffer)
        (reload))

      (defun check-bookmark ()
        (if (org-entry-get nil "url")
            (browse-url (org-entry-get nil "url"))))

      (defun narrow-to-subtree ()
        (org-narrow-to-subtree)
        (beginning-of-buffer)
        (outline-hide-subtree)
        (outline-show-children)
        (org-show-entry)
        (check-bookmark))

      (defun narrow-regexp (term)
        (beginning-of-buffer)
        (search-forward-regexp (format "^[\\*].*%s" term))
        (narrow-to-subtree))

      (defun narrow-occur ()
        (helm-occur)
        (narrow-to-subtree))

      (defun narrow-heading ()
        (helm-org-in-buffer-headings)
        (outline-hide-subtree)
        (narrow-to-subtree))

      (defun narrow-workiva ()
        (narrow-regexp "workiva")
        (search-forward "Services")
        (outline-show-children)
        (search-forward "Projects")
        (outline-show-children))

      (define-minor-mode knowt-mode
        "Provide functions useful for knowt.org"
        :lighter " Knowt"
        :keymap (let ((map (make-sparse-keymap)))
                  (global-set-key (kbd "<f19> <f19>") (lambda () (interactive) (reset)))
                  (global-set-key (kbd "<f19> m") (lambda () (interactive) (find-file-other-window knowt-mode-file)))
                  (define-key map (kbd "<f19> w") (lambda () (interactive) (narrow-workiva)))
                  (define-key map (kbd "<f19> s") (lambda () (interactive) (narrow-occur)))
                  (define-key map (kbd "<f19> h") (lambda () (interactive) (narrow-heading)))
                  (define-key map (kbd "<f19> n") (lambda () (interactive) (narrow-to-subtree)))
                  (define-key map (kbd "<f19> t") 'org-show-todo-tree)
                  (define-key map (kbd "<f19> a") 'org-agenda)
                  (define-key map (kbd "M-n") 'outline-next-visible-heading)
                  (define-key map (kbd "M-p") 'outline-previous-visible-heading)
                  (define-key map (kbd "M-N") 'outline-next-heading)
                  (define-key map (kbd "M-P") 'outline-previous-heading)
    ;;              (define-key helm-map (kbd "<f19>") 'ace-jump-helm-line)
                  map)
        :after-hook (progn
                      (setq ace-jump-helm-line-default-action 'select)
                      (setq org-confirm-elisp-link-function nil)
                      (setq org-confirm-shell-link-function nil)
                      (setq org-agenda-files (list knowt-file-name))
                      (setq org-agenda-sorting-strategy '(todo-state-up priority-down effort-up))
                      (set-agenda-keywords)
                      (message "knowt-mode ready!")))

      (provide 'knowt-mode)
#+END_SRC
